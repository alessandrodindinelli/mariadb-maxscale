---
# Source: mariadb-operator/templates/cert-controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb-operator-cert-controller-cert-controller
  labels:
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator-cert-controller
    app.kubernetes.io/instance: mariadb-operator
    
    app.kubernetes.io/version: "v0.0.33"
    
    app.kubernetes.io/managed-by: Helm
---
# Source: mariadb-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb-operator
  labels:
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator
    app.kubernetes.io/instance: mariadb-operator
    app.kubernetes.io/version: "v0.0.33"
    app.kubernetes.io/managed-by: Helm
---
# Source: mariadb-operator/templates/webhook-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb-operator-webhook
  labels:
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator-webhook
    app.kubernetes.io/instance: mariadb-operator
    
    app.kubernetes.io/version: "v0.0.33"
    
    app.kubernetes.io/managed-by: Helm
---
# Source: mariadb-operator/templates/configmap.yaml
apiVersion: v1
data:
  MARIADB_ENTRYPOINT_VERSION: "11.4"
  MARIADB_GALERA_LIB_PATH: /usr/lib/galera/libgalera_smm.so
  MARIADB_OPERATOR_IMAGE: docker-registry3.mariadb.com/mariadb-operator/mariadb-operator:v0.0.33
  RELATED_IMAGE_EXPORTER: prom/mysqld-exporter:v0.15.1
  RELATED_IMAGE_EXPORTER_MAXSCALE: docker-registry2.mariadb.com/mariadb/maxscale-prometheus-exporter-ubi:v0.0.1
  RELATED_IMAGE_MARIADB: docker-registry1.mariadb.com/library/mariadb:11.4.3
  RELATED_IMAGE_MAXSCALE: docker-registry2.mariadb.com/mariadb/maxscale:23.08.5
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: mariadb-operator-env
---
# Source: mariadb-operator/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mariadb-operator-cert-controller
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - update
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - endpoints/restricted
  verbs:
  - get
  - list
  - watch
---
# Source: mariadb-operator/templates/rbac-user.yaml
# the mariadb-view ClusterRole allows viewing all k8s.mariadb.com resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mariadb-operator-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups: ["k8s.mariadb.com"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
---
# Source: mariadb-operator/templates/rbac-user.yaml
# the mariadb-edit ClusterRole allows editing k8s.mariadb.com resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mariadb-operator-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: ["k8s.mariadb.com"]
  resources: ["*"]
  verbs: ["create", "update", "patch", "delete"]
---
# Source: mariadb-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mariadb-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - endpoints/restricted
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - deletecollection
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - list
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - list
  - patch
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - list
  - patch
  - watch
- apiGroups:
  - k8s.mariadb.com
  resources:
  - backups
  - connections
  - databases
  - grants
  - mariadbs
  - maxscales
  - restores
  - sqljobs
  - users
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8s.mariadb.com
  resources:
  - backups/finalizers
  - connections/finalizers
  - databases/finalizers
  - grants/finalizers
  - mariadbs/finalizers
  - maxscales/finalizers
  - restores/finalizers
  - sqljobs/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - k8s.mariadb.com
  resources:
  - backups/status
  - connections/status
  - databases/status
  - grants/status
  - mariadbs/status
  - maxscales/status
  - restores/status
  - sqljobs/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8s.mariadb.com
  resources:
  - maxscale
  verbs:
  - create
  - list
  - patch
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - list
  - patch
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - list
  - patch
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - rolebindings
  - roles
  verbs:
  - create
  - list
  - patch
  - watch
---
# Source: mariadb-operator/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mariadb-operator-cert-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mariadb-operator-cert-controller
subjects:
- kind: ServiceAccount
  name: mariadb-operator-cert-controller-cert-controller
  namespace: default
---
# Source: mariadb-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mariadb-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mariadb-operator
subjects:
- kind: ServiceAccount
  name: mariadb-operator
  namespace: default
---
# Source: mariadb-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mariadb-operator:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: mariadb-operator
  namespace: default
---
# Source: mariadb-operator/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mariadb-operator-cert-controller
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: mariadb-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mariadb-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: mariadb-operator/templates/cert-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mariadb-operator-cert-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mariadb-operator-cert-controller
subjects:
- kind: ServiceAccount
  name: mariadb-operator-cert-controller-cert-controller
  namespace: default
---
# Source: mariadb-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mariadb-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mariadb-operator
subjects:
- kind: ServiceAccount
  name: mariadb-operator
  namespace: default
---
# Source: mariadb-operator/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mariadb-operator-webhook
  labels:
    
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator-webhook
    app.kubernetes.io/instance: mariadb-operator
    
    app.kubernetes.io/version: "v0.0.33"
    
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    
    app.kubernetes.io/name: mariadb-operator-webhook
    app.kubernetes.io/instance: mariadb-operator
---
# Source: mariadb-operator/templates/cert-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb-operator-cert-controller
  labels:
    
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator-cert-controller
    app.kubernetes.io/instance: mariadb-operator
    
    app.kubernetes.io/version: "v0.0.33"
    
    app.kubernetes.io/managed-by: Helm
spec:
  
  selector:
    matchLabels:
      
      app.kubernetes.io/name: mariadb-operator-cert-controller
      app.kubernetes.io/instance: mariadb-operator
  template:
    metadata:
      
      labels:
        
        app.kubernetes.io/name: mariadb-operator-cert-controller
        app.kubernetes.io/instance: mariadb-operator
    spec:
      serviceAccountName: mariadb-operator-cert-controller-cert-controller
      automountServiceAccountToken: true
      
      
      
      
      containers:
        - image: "docker-registry3.mariadb.com/mariadb-operator/mariadb-operator:v0.0.33"
          imagePullPolicy: IfNotPresent
          name: cert-controller
          args:
            - cert-controller
            - --ca-secret-name=mariadb-operator-webhook-ca
            - --ca-secret-namespace=default
            - --ca-validity=35064h
            - --cert-secret-name=mariadb-operator-webhook-cert
            - --cert-secret-namespace=default
            - --cert-validity=8766h
            - --lookahead-validity=2160h
            - --service-name=mariadb-operator-webhook
            - --service-namespace=default
            - --requeue-duration=5m
            - --metrics-addr=:8080
            - --health-addr=:8081
            - --log-level=INFO
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
            - containerPort: 8081
              protocol: TCP
              name: health
          env: 
            - name: CLUSTER_NAME
              value: cluster.local
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 5
---
# Source: mariadb-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb-operator
  labels:
    
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator
    app.kubernetes.io/instance: mariadb-operator
    app.kubernetes.io/version: "v0.0.33"
    app.kubernetes.io/managed-by: Helm
spec:
  
  selector:
    matchLabels:
      
      app.kubernetes.io/name: mariadb-operator
      app.kubernetes.io/instance: mariadb-operator
  template:
    metadata:
      
      labels:
        
        app.kubernetes.io/name: mariadb-operator
        app.kubernetes.io/instance: mariadb-operator
    spec:
      serviceAccountName: mariadb-operator
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 10
      
      
      
      
      containers:
        - image: "docker-registry3.mariadb.com/mariadb-operator/mariadb-operator:v0.0.33"
          imagePullPolicy: IfNotPresent
          name: controller
          args:
            - --metrics-addr=:8080
            - --log-level=INFO
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
          envFrom:
            - configMapRef:
                name: mariadb-operator-env
          env:
            - name: CLUSTER_NAME
              value: cluster.local
            - name: MARIADB_OPERATOR_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: MARIADB_OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MARIADB_OPERATOR_SA_PATH
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# Source: mariadb-operator/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb-operator-webhook
  labels:
    
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator-webhook
    app.kubernetes.io/instance: mariadb-operator
    
    app.kubernetes.io/version: "v0.0.33"
    
    app.kubernetes.io/managed-by: Helm
spec:
  
  selector:
    matchLabels:
      
      app.kubernetes.io/name: mariadb-operator-webhook
      app.kubernetes.io/instance: mariadb-operator
  template:
    metadata:
      
      labels:
        
        app.kubernetes.io/name: mariadb-operator-webhook
        app.kubernetes.io/instance: mariadb-operator
    spec:
      serviceAccountName: mariadb-operator-webhook
      automountServiceAccountToken: true
      
      
      
      
      hostNetwork: false
      containers:
        - image: "docker-registry3.mariadb.com/mariadb-operator/mariadb-operator:v0.0.33"
          imagePullPolicy: IfNotPresent
          name: webhook
          args:
            - webhook
            - --ca-cert-path=/tmp/k8s-webhook-server/certificate-authority/tls.crt
            - --cert-dir=/tmp/k8s-webhook-server/serving-certs
            - --dns-name=mariadb-operator-webhook.default.svc
            - --port=9443
            - --metrics-addr=:8080
            - --health-addr=:8081
            - --log-level=INFO
          ports:
            - containerPort: 9443
              protocol: TCP
              name: https
            - containerPort: 8080
              protocol: TCP
              name: metrics
            - containerPort: 8081
              protocol: TCP
              name: health
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/certificate-authority
              name: ca
              readOnly: true
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 5
          
          
      volumes:
        - name: ca
          secret:
            defaultMode: 420
            secretName: mariadb-operator-webhook-ca
        - name: cert
          secret:
            defaultMode: 420
            secretName: mariadb-operator-webhook-cert
---
# Source: mariadb-operator/templates/webhook-config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mariadb-operator-webhook
  labels:
    
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator-webhook
    app.kubernetes.io/instance: mariadb-operator
    
    app.kubernetes.io/version: "v0.0.33"
    
    app.kubernetes.io/managed-by: Helm
  annotations:
    k8s.mariadb.com/webhook: ""
    
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: mariadb-operator-webhook
      namespace: default
      path: /mutate-k8s-mariadb-com-v1alpha1-mariadb
  failurePolicy: Fail
  name: mmariadb.kb.io
  rules:
  - apiGroups:
    - k8s.mariadb.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - mariadbs
  sideEffects: None
---
# Source: mariadb-operator/templates/webhook-config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: mariadb-operator-webhook
  labels:
    
    helm.sh/chart: mariadb-operator-0.33.0
    app.kubernetes.io/name: mariadb-operator-webhook
    app.kubernetes.io/instance: mariadb-operator
    
    app.kubernetes.io/version: "v0.0.33"
    
    app.kubernetes.io/managed-by: Helm
  annotations:
    k8s.mariadb.com/webhook: ""
    
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-backup
    failurePolicy: Fail
    name: vbackup.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backups
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-connection
    failurePolicy: Fail
    name: vconnection.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - connections
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-database
    failurePolicy: Fail
    name: vdatabase.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - databases
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-grant
    failurePolicy: Fail
    name: vgrant.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - grants
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-mariadb
    failurePolicy: Fail
    name: vmariadb.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - mariadbs
    sideEffects: None
  - admissionReviewVersions:
    - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-maxscale
    failurePolicy: Fail
    name: vmaxscale.kb.io
    rules:
    - apiGroups:
      - k8s.mariadb.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - maxscales
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-restore
    failurePolicy: Fail
    name: vrestore.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - restores
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-sqljob
    failurePolicy: Fail
    name: vsqljob.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - sqljobs
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: mariadb-operator-webhook
        namespace: default
        path: /validate-k8s-mariadb-com-v1alpha1-user
    failurePolicy: Fail
    name: vuser.kb.io
    rules:
      - apiGroups:
          - k8s.mariadb.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - users
    sideEffects: None
